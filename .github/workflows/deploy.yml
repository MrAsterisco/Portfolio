name: Deploy

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'yarn'
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Build
        run: yarn build
      - name: Zip Artifact
        run: zip -r release.zip * .next
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: "release"
          path: release.zip
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: "release"
      - name: Unzip Artifact
        run: unzip release.zip
      - name: Remove Zip
        run: rm -rf release.zip
      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Rsync Artifact
        run: rsync -rlDc --delete --filter="P .env" -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEPLOY_PORT }}" ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_FOLDER }}
